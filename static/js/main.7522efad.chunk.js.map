{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fakeAuth","isAuthenticated","authenticate","cb","this","setTimeout","signout","Customer","Admin","Home","Login","state","redirectToReferrer","login","setState","from","props","location","pathname","to","onClick","React","Component","PrivateRoute","component","rest","render","AuthButton","withRouter","history","push","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPAMMA,EAAW,CAEfC,iBAAiB,EACjBC,aAHe,SAGFC,GACbC,KAAKH,iBAAkB,EACvBI,WAAWF,EAAG,MAGdG,QARe,SAQPH,GACRC,KAAKH,iBAAkB,EACvBI,WAAWF,EAAG,OASVI,EAAW,kBAAM,2CAEjBC,EAAQ,kBAAM,wCAEdC,EAAO,kBAAM,uCAGbC,E,4MAENC,MAAQ,CACNC,oBAAoB,G,EAEtBC,MAAQ,WACNb,EAASE,cAAa,WACpB,EAAKY,UAAS,iBAAK,CACjBF,oBAAmB,U,uDAKhB,IAEAA,EAAuBR,KAAKO,MAA5BC,mBACAG,GAASX,KAAKY,MAAMC,SAASN,OAAS,CAAEI,KAAM,CAAEG,SAAU,OAA1DH,KAER,OAA0B,IAAvBH,EAEC,cAAC,IAAD,CAAUO,GAAIJ,IAMnB,gCACA,oDAAuBA,EAAKG,SAA5B,wBACA,wBAAQE,QAAShB,KAAKS,MAAtB,2B,GA5BoBQ,IAAMC,WAqCpBC,EAAe,SAAC,GAAD,IAAcD,EAAd,EAAGE,UAAyBC,EAA5B,oCACnB,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OAAU,SAACV,GAAD,OAEI,IAA7BhB,EAASC,gBACP,cAACqB,EAAD,eAAeN,IACf,cAAC,IAAD,CAAUG,GAAK,CACfD,SAAU,SACVP,MAAO,CAAEI,KAAMC,EAAMC,kBAQrBU,EAAaC,aAAW,gBAAGC,EAAH,EAAGA,QAAH,OACC,IAA7B7B,EAASC,gBACP,0CACS,wBAAQmB,QAAU,WAG3BpB,EAASM,SAAQ,kBAAKuB,EAAQC,KAAK,SAH1B,yBAOT,0DAsCWC,E,uKA/Bf,OAEA,cAAC,IAAD,UACA,gCACA,cAACJ,EAAD,IACC,+BACK,6BAAI,cAAC,IAAD,CAAMR,GAAG,QAAT,yBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,8BACH,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,6BAIX,cAAC,IAAD,CAAOa,KAAK,QAAQR,UAAYf,IAChC,cAAC,IAAD,CAAOuB,KAAK,SAASR,UAAYd,IAEjC,cAAC,EAAD,CAAcsB,KAAK,YAAYR,UAAYjB,IAC3C,cAAC,EAAD,CAAcyB,KAAK,SAASR,UAAWhB,a,GAnBrBc,aCtFHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7522efad.chunk.js","sourcesContent":["\nimport React,{Component} from 'react';\n\nimport { BrowserRouter as Router, Route, Link, Redirect,withRouter } from \"react-router-dom\";\n\n\nconst fakeAuth = {\n\n  isAuthenticated: false,\n  authenticate(cb) {\n  this.isAuthenticated = true \n  setTimeout(cb,100)//fake async \n  },\n\n  signout(cb){\n  this.isAuthenticated = false\n  setTimeout(cb,100)//fake async\n  } \n}\n\n\n\n//const Public = () => <h3>Public</h3>\n//const Protected = () => <h3>Protected</h3>\n\nconst Customer = () => <h3>Customer</h3>\n\nconst Admin = () => <h3>Admin</h3>\n\nconst Home = () => <h3>Home</h3>\n\n\nclass Login extends React.Component{\n\nstate = {\n  redirectToReferrer: false\n}\nlogin = () => {\n  fakeAuth.authenticate(()=>{\n    this.setState(()=>({\n      redirectToReferrer:true\n    }))\n  })\n}\n\nrender(){\n\n const { redirectToReferrer } = this.state \n const { from } = this.props.location.state || { from: { pathname: '/' } }\n\n if(redirectToReferrer === true){\n   return(\n     <Redirect to={from} />\n   )\n }\n\nreturn(\n\n<div>\n<p>You must log in as {from.pathname} to view this page</p>\n<button onClick={this.login}>Log in</button>\n</div>)\n\n} \n\n}\n\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) =>(\n  <Route {...rest} render = {(props)=>(\n\n    fakeAuth.isAuthenticated === true\n    ? <Component {...props} />\n    : <Redirect to ={{\n      pathname: '/login',\n      state: { from: props.location }\n    }} \n\n    />\n  )}/>\n)\n\n\nconst AuthButton = withRouter(({ history }) => (\n  fakeAuth.isAuthenticated === true\n  ? <p>\n    Welcome! <button onClick ={()=>{\n\n\n    fakeAuth.signout(()=> history.push('/'))  \n\n    }}>Sign Out</button>\n    </p>\n  : <p>You are not logged in.</p>   \n)\n)\n\nclass App extends Component{\nrender(){\n\nreturn(\n\n<Router>\n<div>\n<AuthButton />\n <ul>\n      <li><Link to='/home'>Home Page</Link></li> \n      <li><Link to='/customer'>Customers Page</Link></li>\n       <li><Link to='/admin'>Admin Page</Link></li>\n  </ul> \n\n\n<Route path='/home' component ={Home}/>\n<Route path='/login' component ={Login}/>\n\n<PrivateRoute path='/customer' component ={Customer}/>\n<PrivateRoute path='/admin' component={Admin}/> \n\n\n</div> \n\n\n</Router>\n\n)\n\n\n}\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}